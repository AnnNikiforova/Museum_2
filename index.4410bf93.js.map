{"mappings":"ACEA,MAAM,EAAa,SAAS,cAAc,CAAC,eACrC,EAAO,SAAS,cAAc,CAAC,QAC/B,EAAO,SAAS,IAAI,CACpB,EAAO,SAAS,eAAe,CAoCrC,SAAS,IACP,EAAW,SAAS,CAAC,MAAM,CAAC,sBAC5B,EAAK,SAAS,CAAC,MAAM,CAAC,cACtB,EAAK,KAAK,CAAC,SAAS,CAAG,OACvB,EAAK,KAAK,CAAC,YAAY,CAAG,CAC5B,CAvCA,EAAW,gBAAgB,CAAC,QAAS,KAC/B,EAAW,SAAS,CAAC,QAAQ,CAAC,sBAChC,KA0BF,EAAW,SAAS,CAAC,GAAG,CAAC,sBACzB,EAAK,SAAS,CAAC,GAAG,CAAC,cACnB,EAAK,KAAK,CAAC,SAAS,CAAG,SACvB,EAAK,KAAK,CAAC,YAAY,CAAG,AAvB5B,WAEE,IAAM,EAAQ,SAAS,aAAa,CAAC,MACrC,CAAA,EAAM,KAAK,CAAC,UAAU,CAAG,SACzB,EAAM,KAAK,CAAC,QAAQ,CAAG,SACvB,EAAM,KAAK,CAAC,eAAe,CAAG,YAC9B,SAAS,IAAI,CAAC,WAAW,CAAC,GAE1B,IAAM,EAAQ,SAAS,aAAa,CAAC,OACrC,EAAM,WAAW,CAAC,GAElB,IAAM,EAAkB,EAAM,WAAW,CAAG,EAAM,WAAW,CAI7D,OAFA,EAAM,UAAU,CAAC,WAAW,CAAC,GAEtB,CAET,IAMkD,KAzBlD,GAmCA,SAAS,gBAAgB,CAAC,QAAS,SAAS,CAAC,EAG3C,GAFA,QAAQ,GAAG,CAAC,EAAE,MAAM,EAEhB,AAAqB,MAArB,EAAE,MAAM,CAAC,OAAO,EAAY,EAAE,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAM,CACzD,IAEA,EAAE,cAAc,GAGhB,IAAM,EAAW,EAAE,MAAM,CAAC,YAAY,CAAC,QACjC,EAAgB,SAAS,aAAa,CAAC,GAEzC,GAEA,EAAc,cAAc,CAAC,CACzB,SAAU,QACd,EAER,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nconst menuButton = document.getElementById(\"menu-button\");\nconst menu = document.getElementById(\"menu\");\nconst body = document.body;\nconst page = document.documentElement;\nmenuButton.addEventListener(\"click\", ()=>{\n    if (menuButton.classList.contains(\"menu-button--close\")) closeMenu();\n    else openMenu();\n});\nfunction getScrollbarWidth() {\n    const outer = document.createElement(\"div\");\n    outer.style.visibility = \"hidden\";\n    outer.style.overflow = \"scroll\";\n    outer.style.msOverflowStyle = \"scrollbar\";\n    document.body.appendChild(outer);\n    const inner = document.createElement(\"div\");\n    outer.appendChild(inner);\n    const scrollbarWidth = outer.offsetWidth - inner.offsetWidth;\n    outer.parentNode.removeChild(outer);\n    return scrollbarWidth;\n}\nfunction openMenu() {\n    menuButton.classList.add(\"menu-button--close\");\n    menu.classList.add(\"menu--open\");\n    body.style.overflowY = \"hidden\";\n    page.style.paddingRight = getScrollbarWidth() + \"px\";\n}\nfunction closeMenu() {\n    menuButton.classList.remove(\"menu-button--close\");\n    menu.classList.remove(\"menu--open\");\n    body.style.overflowY = \"auto\";\n    page.style.paddingRight = 0;\n}\ndocument.addEventListener(\"click\", function(e) {\n    console.log(e.target);\n    // Check if the clicked element is an anchor tag with a hash in the href\n    if (e.target.tagName === \"A\" && e.target.href.includes(\"#\")) {\n        closeMenu();\n        e.preventDefault(); // Prevent the default anchor click behavior\n        // Get the target element by the href attribute\n        const targetId = e.target.getAttribute(\"href\");\n        const targetElement = document.querySelector(targetId);\n        if (targetElement) // Scroll to the target element smoothly\n        targetElement.scrollIntoView({\n            behavior: \"smooth\"\n        });\n    }\n});\n\n//# sourceMappingURL=index.4410bf93.js.map\n","'use strict';\n\nconst menuButton = document.getElementById('menu-button');\nconst menu = document.getElementById('menu');\nconst body = document.body;\nconst page = document.documentElement;\n\nmenuButton.addEventListener('click', () => {\n  if (menuButton.classList.contains('menu-button--close')) {\n    closeMenu()\n  } else {\n    openMenu()\n  }\n});\n\nfunction getScrollbarWidth() {\n\n  const outer = document.createElement('div');\n  outer.style.visibility = 'hidden';\n  outer.style.overflow = 'scroll';\n  outer.style.msOverflowStyle = 'scrollbar';\n  document.body.appendChild(outer);\n\n  const inner = document.createElement('div');\n  outer.appendChild(inner);\n\n  const scrollbarWidth = (outer.offsetWidth - inner.offsetWidth);\n\n  outer.parentNode.removeChild(outer);\n\n  return scrollbarWidth;\n\n}\n\nfunction openMenu() {\n  menuButton.classList.add('menu-button--close');\n  menu.classList.add('menu--open');\n  body.style.overflowY = \"hidden\";\n  page.style.paddingRight = getScrollbarWidth() + 'px';\n}\n\nfunction closeMenu() {\n  menuButton.classList.remove('menu-button--close');\n  menu.classList.remove('menu--open');\n  body.style.overflowY = \"auto\";\n  page.style.paddingRight = 0;\n}\n\ndocument.addEventListener('click', function(e) {\n  console.log(e.target)\n  // Check if the clicked element is an anchor tag with a hash in the href\n  if (e.target.tagName === 'A' && e.target.href.includes('#')) {\n      closeMenu()\n\n      e.preventDefault(); // Prevent the default anchor click behavior\n\n      // Get the target element by the href attribute\n      const targetId = e.target.getAttribute('href');\n      const targetElement = document.querySelector(targetId);\n\n      if (targetElement) {\n          // Scroll to the target element smoothly\n          targetElement.scrollIntoView({\n              behavior: 'smooth'\n          });\n      }\n  }\n});\n"],"names":["menuButton","document","getElementById","menu","body","page","documentElement","closeMenu","classList","remove","style","overflowY","paddingRight","addEventListener","contains","add","getScrollbarWidth","outer","createElement","visibility","overflow","msOverflowStyle","appendChild","inner","scrollbarWidth","offsetWidth","parentNode","removeChild","e","console","log","target","tagName","href","includes","preventDefault","targetId","getAttribute","targetElement","querySelector","scrollIntoView","behavior"],"version":3,"file":"index.4410bf93.js.map"}